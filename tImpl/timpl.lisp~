(IN-PACKAGE "ACL2")
(include-book "io-utilities" :dir :teachpacks)
(include-book "avl-rational-keys" :dir :teachpacks)
(include-book "list-utilities" :dir :teachpacks)
(set-state-ok t)


(defun file->chr-list (file-path state)
  (mv-let (str error state)
          (file->string file-path state)
     (if error
         (mv error state)
         (mv (str->chrs str) state))))

(defun my-num-noncomments (lines)
   (if (not (consp lines))
        0
        (let* ((semicolon (code-char 59))
               (LF (code-char 10))
               (CR (code-char 13))
               (whitespace (list #\Space #\Newline #\Tab LF CR))
               (stripped (drop-set whitespace (car lines))))
           (if (and (consp stripped)
                    (not (char-equal semicolon (car stripped))))
               (+ (my-num-noncomments (cdr lines)) 1)
               (my-num-noncomments (cdr lines))))))
(defun my-loc-from-file-as-string (str)
  (my-num-noncomments (packets #\Newline (str->chrs str))))
(defun my-loc (file-path state)
  (mv-let (str error state)
          (file->string file-path state)
     (if error
         (mv error state)
         (mv (my-loc-from-file-as-string str) state))))

